# .circleci/config.yml
version: 2.1

jobs:
  build-android:
    docker:
      - image: cimg/android:2022.08  # Next-gen CircleCI Android image
    working_directory: ~/project
    environment:
      FLUTTER_VERSION: stable
    steps:
      - checkout

      - run:
          name: Install Dependencies
          command: |
            sudo apt-get update
            sudo apt-get install -y ruby-full curl

      - run:
          name: Install NVM and Node.js
          command: |
            # Install NVM
            curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            # Install Node.js
            nvm install 14
            nvm alias default 14
            # Add NVM and Node.js to PATH
            echo 'export NVM_DIR="$HOME/.nvm"' >> $BASH_ENV
            echo '[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"' >> $BASH_ENV
            echo 'export PATH="$NVM_DIR/versions/node/v14.21.3/bin:$PATH"' >> $BASH_ENV

      - run:
          name: Install Flutter
          command: |
            source $BASH_ENV
            git clone https://github.com/flutter/flutter.git -b $FLUTTER_VERSION
            echo 'export PATH="$PATH:$PWD/flutter/bin:$HOME/.pub-cache/bin"' >> $BASH_ENV
            flutter doctor

      - run:
          name: Install Bundler
          command: gem install bundler

      - run:
          name: Install Firebase CLI
          command: |
            source $BASH_ENV
            npm install -g firebase-tools

      - restore_cache:
          key: flutter-android-{{ checksum "pubspec.yaml" }}

      - run:
          name: Get Flutter Dependencies
          command: |
            source $BASH_ENV
            flutter pub get

      - save_cache:
          paths:
            - $HOME/.pub-cache
            - .packages
            - android/.gradle
            - android/build
          key: flutter-android-{{ checksum "pubspec.yaml" }}

      - run:
          name: Set up Firebase Service Account
          command: |
            echo $GOOGLE_SERVICE_ACCOUNT_KEY | base64 --decode > $HOME/firebase_service_account.json
            echo 'export GOOGLE_APPLICATION_CREDENTIALS=$HOME/firebase_service_account.json' >> $BASH_ENV
            source $BASH_ENV

      - run:
          name: Build Android App with Fastlane
          command: |
            source $BASH_ENV
            cd android
            bundle install
            bundle exec fastlane android

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build-android
