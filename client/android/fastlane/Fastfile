default_platform(:android)

platform :android do

  desc "Build and distribute to Firebase App Distribution"
  lane :distribute do

    # Set Firebase App Distribution variables
    firebase_app_id = "1:1007477594478:android:3a11682047e1049f0cc97f"
    firebase_cli_token = ENV["FIREBASE_TOKEN"]

    # Build the APK
    sh("flutter build apk")

    # Use the environment variable for the APK output path
    apk_path = File.expand_path("../../build/app/outputs/flutter-apk/app-release.apk", Dir.pwd)
    if apk_path.nil? || !File.exist?(apk_path)
      UI.user_error!("APK file not found. Make sure the build completed successfully: " + apk_path)
      return
    end

    firebase_app_distribution(
      app: "#{firebase_app_id}",               # Your Firebase App ID
      groups: "android",                       # Distribution group(s)
      release_notes: "Automated release",      # Optional: Release notes
      apk_path: apk_path,                      # Path to the APK file
      firebase_cli_token: "#{firebase_cli_token}" # Optional: Firebase token
    )

#    sh("firebase appdistribution:distribute #{apk_path} --app #{firebase_app_id} --groups android --token #{firebase_cli_token}")
    
    # Upload to Firebase App Distribution
    # firebase_app_distribution(
    #   app: firebase_app_id,
    #   apk_path: apk_path,
    #   groups: "android",
    #   firebase_cli_token: firebase_cli_token
    # )
  end

  # desc "Deploy a new version to the Google Play Store"
  # lane :deploy do
  #   # Build the release APK
  #   gradle(task: "clean assembleRelease")

  #   # Use the APK path directly from the environment variable
  #   apk_path = Actions.lane_context[SharedValues::GRADLE_APK_OUTPUT_PATH]
  #   if apk_path.nil? || !File.exist?(apk_path)
  #     UI.user_error!("APK file not found. Make sure the build completed successfully.")
  #   end

  #   # Upload to Google Play
  #   upload_to_play_store(
  #     track: "production", # or "beta", "alpha" based on your release stage
  #     skip_upload_metadata: true, # Skip metadata if not needed
  #     skip_upload_images: true,
  #     skip_upload_screenshots: true
  #   )
  # end
end
